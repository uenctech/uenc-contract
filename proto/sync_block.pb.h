// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync_block.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_sync_5fblock_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_sync_5fblock_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_sync_5fblock_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_sync_5fblock_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[11]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sync_5fblock_2eproto;
class FastSyncGetBlockAck;
class FastSyncGetBlockAckDefaultTypeInternal;
extern FastSyncGetBlockAckDefaultTypeInternal _FastSyncGetBlockAck_default_instance_;
class FastSyncGetBlockReq;
class FastSyncGetBlockReqDefaultTypeInternal;
extern FastSyncGetBlockReqDefaultTypeInternal _FastSyncGetBlockReq_default_instance_;
class FastSyncGetHashAck;
class FastSyncGetHashAckDefaultTypeInternal;
extern FastSyncGetHashAckDefaultTypeInternal _FastSyncGetHashAck_default_instance_;
class FastSyncGetHashReq;
class FastSyncGetHashReqDefaultTypeInternal;
extern FastSyncGetHashReqDefaultTypeInternal _FastSyncGetHashReq_default_instance_;
class SyncGetBlockAck;
class SyncGetBlockAckDefaultTypeInternal;
extern SyncGetBlockAckDefaultTypeInternal _SyncGetBlockAck_default_instance_;
class SyncGetBlockReq;
class SyncGetBlockReqDefaultTypeInternal;
extern SyncGetBlockReqDefaultTypeInternal _SyncGetBlockReq_default_instance_;
class SyncGetHeightHashAck;
class SyncGetHeightHashAckDefaultTypeInternal;
extern SyncGetHeightHashAckDefaultTypeInternal _SyncGetHeightHashAck_default_instance_;
class SyncGetHeightHashReq;
class SyncGetHeightHashReqDefaultTypeInternal;
extern SyncGetHeightHashReqDefaultTypeInternal _SyncGetHeightHashReq_default_instance_;
class SyncGetSumHashAck;
class SyncGetSumHashAckDefaultTypeInternal;
extern SyncGetSumHashAckDefaultTypeInternal _SyncGetSumHashAck_default_instance_;
class SyncGetSumHashReq;
class SyncGetSumHashReqDefaultTypeInternal;
extern SyncGetSumHashReqDefaultTypeInternal _SyncGetSumHashReq_default_instance_;
class SyncSumHash;
class SyncSumHashDefaultTypeInternal;
extern SyncSumHashDefaultTypeInternal _SyncSumHash_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::FastSyncGetBlockAck* Arena::CreateMaybeMessage<::FastSyncGetBlockAck>(Arena*);
template<> ::FastSyncGetBlockReq* Arena::CreateMaybeMessage<::FastSyncGetBlockReq>(Arena*);
template<> ::FastSyncGetHashAck* Arena::CreateMaybeMessage<::FastSyncGetHashAck>(Arena*);
template<> ::FastSyncGetHashReq* Arena::CreateMaybeMessage<::FastSyncGetHashReq>(Arena*);
template<> ::SyncGetBlockAck* Arena::CreateMaybeMessage<::SyncGetBlockAck>(Arena*);
template<> ::SyncGetBlockReq* Arena::CreateMaybeMessage<::SyncGetBlockReq>(Arena*);
template<> ::SyncGetHeightHashAck* Arena::CreateMaybeMessage<::SyncGetHeightHashAck>(Arena*);
template<> ::SyncGetHeightHashReq* Arena::CreateMaybeMessage<::SyncGetHeightHashReq>(Arena*);
template<> ::SyncGetSumHashAck* Arena::CreateMaybeMessage<::SyncGetSumHashAck>(Arena*);
template<> ::SyncGetSumHashReq* Arena::CreateMaybeMessage<::SyncGetSumHashReq>(Arena*);
template<> ::SyncSumHash* Arena::CreateMaybeMessage<::SyncSumHash>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class FastSyncGetHashReq :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FastSyncGetHashReq) */ {
 public:
  FastSyncGetHashReq();
  virtual ~FastSyncGetHashReq();

  FastSyncGetHashReq(const FastSyncGetHashReq& from);
  FastSyncGetHashReq(FastSyncGetHashReq&& from) noexcept
    : FastSyncGetHashReq() {
    *this = ::std::move(from);
  }

  inline FastSyncGetHashReq& operator=(const FastSyncGetHashReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline FastSyncGetHashReq& operator=(FastSyncGetHashReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FastSyncGetHashReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FastSyncGetHashReq* internal_default_instance() {
    return reinterpret_cast<const FastSyncGetHashReq*>(
               &_FastSyncGetHashReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FastSyncGetHashReq& a, FastSyncGetHashReq& b) {
    a.Swap(&b);
  }
  inline void Swap(FastSyncGetHashReq* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FastSyncGetHashReq* New() const final {
    return CreateMaybeMessage<FastSyncGetHashReq>(nullptr);
  }

  FastSyncGetHashReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FastSyncGetHashReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FastSyncGetHashReq& from);
  void MergeFrom(const FastSyncGetHashReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FastSyncGetHashReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FastSyncGetHashReq";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSelfNodeIdFieldNumber = 1,
    kMsgIdFieldNumber = 2,
    kStartHeightFieldNumber = 3,
    kEndHeightFieldNumber = 4,
  };
  // string self_node_id = 1;
  void clear_self_node_id();
  const std::string& self_node_id() const;
  void set_self_node_id(const std::string& value);
  void set_self_node_id(std::string&& value);
  void set_self_node_id(const char* value);
  void set_self_node_id(const char* value, size_t size);
  std::string* mutable_self_node_id();
  std::string* release_self_node_id();
  void set_allocated_self_node_id(std::string* self_node_id);
  private:
  const std::string& _internal_self_node_id() const;
  void _internal_set_self_node_id(const std::string& value);
  std::string* _internal_mutable_self_node_id();
  public:

  // string msg_id = 2;
  void clear_msg_id();
  const std::string& msg_id() const;
  void set_msg_id(const std::string& value);
  void set_msg_id(std::string&& value);
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  std::string* mutable_msg_id();
  std::string* release_msg_id();
  void set_allocated_msg_id(std::string* msg_id);
  private:
  const std::string& _internal_msg_id() const;
  void _internal_set_msg_id(const std::string& value);
  std::string* _internal_mutable_msg_id();
  public:

  // uint64 start_height = 3;
  void clear_start_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 start_height() const;
  void set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_start_height() const;
  void _internal_set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 end_height = 4;
  void clear_end_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 end_height() const;
  void set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_end_height() const;
  void _internal_set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:FastSyncGetHashReq)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr self_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 start_height_;
  ::PROTOBUF_NAMESPACE_ID::uint64 end_height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// -------------------------------------------------------------------

class FastSyncGetHashAck :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FastSyncGetHashAck) */ {
 public:
  FastSyncGetHashAck();
  virtual ~FastSyncGetHashAck();

  FastSyncGetHashAck(const FastSyncGetHashAck& from);
  FastSyncGetHashAck(FastSyncGetHashAck&& from) noexcept
    : FastSyncGetHashAck() {
    *this = ::std::move(from);
  }

  inline FastSyncGetHashAck& operator=(const FastSyncGetHashAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline FastSyncGetHashAck& operator=(FastSyncGetHashAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FastSyncGetHashAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FastSyncGetHashAck* internal_default_instance() {
    return reinterpret_cast<const FastSyncGetHashAck*>(
               &_FastSyncGetHashAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FastSyncGetHashAck& a, FastSyncGetHashAck& b) {
    a.Swap(&b);
  }
  inline void Swap(FastSyncGetHashAck* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FastSyncGetHashAck* New() const final {
    return CreateMaybeMessage<FastSyncGetHashAck>(nullptr);
  }

  FastSyncGetHashAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FastSyncGetHashAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FastSyncGetHashAck& from);
  void MergeFrom(const FastSyncGetHashAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FastSyncGetHashAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FastSyncGetHashAck";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSelfNodeIdFieldNumber = 1,
    kMsgIdFieldNumber = 2,
    kHashFieldNumber = 4,
    kNodeBlockHeightFieldNumber = 3,
  };
  // string self_node_id = 1;
  void clear_self_node_id();
  const std::string& self_node_id() const;
  void set_self_node_id(const std::string& value);
  void set_self_node_id(std::string&& value);
  void set_self_node_id(const char* value);
  void set_self_node_id(const char* value, size_t size);
  std::string* mutable_self_node_id();
  std::string* release_self_node_id();
  void set_allocated_self_node_id(std::string* self_node_id);
  private:
  const std::string& _internal_self_node_id() const;
  void _internal_set_self_node_id(const std::string& value);
  std::string* _internal_mutable_self_node_id();
  public:

  // string msg_id = 2;
  void clear_msg_id();
  const std::string& msg_id() const;
  void set_msg_id(const std::string& value);
  void set_msg_id(std::string&& value);
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  std::string* mutable_msg_id();
  std::string* release_msg_id();
  void set_allocated_msg_id(std::string* msg_id);
  private:
  const std::string& _internal_msg_id() const;
  void _internal_set_msg_id(const std::string& value);
  std::string* _internal_mutable_msg_id();
  public:

  // string hash = 4;
  void clear_hash();
  const std::string& hash() const;
  void set_hash(const std::string& value);
  void set_hash(std::string&& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  std::string* mutable_hash();
  std::string* release_hash();
  void set_allocated_hash(std::string* hash);
  private:
  const std::string& _internal_hash() const;
  void _internal_set_hash(const std::string& value);
  std::string* _internal_mutable_hash();
  public:

  // uint64 node_block_height = 3;
  void clear_node_block_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 node_block_height() const;
  void set_node_block_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_node_block_height() const;
  void _internal_set_node_block_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:FastSyncGetHashAck)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr self_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hash_;
  ::PROTOBUF_NAMESPACE_ID::uint64 node_block_height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// -------------------------------------------------------------------

class FastSyncGetBlockReq :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FastSyncGetBlockReq) */ {
 public:
  FastSyncGetBlockReq();
  virtual ~FastSyncGetBlockReq();

  FastSyncGetBlockReq(const FastSyncGetBlockReq& from);
  FastSyncGetBlockReq(FastSyncGetBlockReq&& from) noexcept
    : FastSyncGetBlockReq() {
    *this = ::std::move(from);
  }

  inline FastSyncGetBlockReq& operator=(const FastSyncGetBlockReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline FastSyncGetBlockReq& operator=(FastSyncGetBlockReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FastSyncGetBlockReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FastSyncGetBlockReq* internal_default_instance() {
    return reinterpret_cast<const FastSyncGetBlockReq*>(
               &_FastSyncGetBlockReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(FastSyncGetBlockReq& a, FastSyncGetBlockReq& b) {
    a.Swap(&b);
  }
  inline void Swap(FastSyncGetBlockReq* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FastSyncGetBlockReq* New() const final {
    return CreateMaybeMessage<FastSyncGetBlockReq>(nullptr);
  }

  FastSyncGetBlockReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FastSyncGetBlockReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FastSyncGetBlockReq& from);
  void MergeFrom(const FastSyncGetBlockReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FastSyncGetBlockReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FastSyncGetBlockReq";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSelfNodeIdFieldNumber = 1,
    kMsgIdFieldNumber = 2,
    kStartHeightFieldNumber = 3,
    kEndHeightFieldNumber = 4,
  };
  // string self_node_id = 1;
  void clear_self_node_id();
  const std::string& self_node_id() const;
  void set_self_node_id(const std::string& value);
  void set_self_node_id(std::string&& value);
  void set_self_node_id(const char* value);
  void set_self_node_id(const char* value, size_t size);
  std::string* mutable_self_node_id();
  std::string* release_self_node_id();
  void set_allocated_self_node_id(std::string* self_node_id);
  private:
  const std::string& _internal_self_node_id() const;
  void _internal_set_self_node_id(const std::string& value);
  std::string* _internal_mutable_self_node_id();
  public:

  // string msg_id = 2;
  void clear_msg_id();
  const std::string& msg_id() const;
  void set_msg_id(const std::string& value);
  void set_msg_id(std::string&& value);
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  std::string* mutable_msg_id();
  std::string* release_msg_id();
  void set_allocated_msg_id(std::string* msg_id);
  private:
  const std::string& _internal_msg_id() const;
  void _internal_set_msg_id(const std::string& value);
  std::string* _internal_mutable_msg_id();
  public:

  // uint64 start_height = 3;
  void clear_start_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 start_height() const;
  void set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_start_height() const;
  void _internal_set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 end_height = 4;
  void clear_end_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 end_height() const;
  void set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_end_height() const;
  void _internal_set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:FastSyncGetBlockReq)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr self_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 start_height_;
  ::PROTOBUF_NAMESPACE_ID::uint64 end_height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// -------------------------------------------------------------------

class FastSyncGetBlockAck :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:FastSyncGetBlockAck) */ {
 public:
  FastSyncGetBlockAck();
  virtual ~FastSyncGetBlockAck();

  FastSyncGetBlockAck(const FastSyncGetBlockAck& from);
  FastSyncGetBlockAck(FastSyncGetBlockAck&& from) noexcept
    : FastSyncGetBlockAck() {
    *this = ::std::move(from);
  }

  inline FastSyncGetBlockAck& operator=(const FastSyncGetBlockAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline FastSyncGetBlockAck& operator=(FastSyncGetBlockAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FastSyncGetBlockAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FastSyncGetBlockAck* internal_default_instance() {
    return reinterpret_cast<const FastSyncGetBlockAck*>(
               &_FastSyncGetBlockAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(FastSyncGetBlockAck& a, FastSyncGetBlockAck& b) {
    a.Swap(&b);
  }
  inline void Swap(FastSyncGetBlockAck* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FastSyncGetBlockAck* New() const final {
    return CreateMaybeMessage<FastSyncGetBlockAck>(nullptr);
  }

  FastSyncGetBlockAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FastSyncGetBlockAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FastSyncGetBlockAck& from);
  void MergeFrom(const FastSyncGetBlockAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FastSyncGetBlockAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "FastSyncGetBlockAck";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlocksFieldNumber = 2,
    kMsgIdFieldNumber = 1,
  };
  // repeated bytes blocks = 2;
  int blocks_size() const;
  private:
  int _internal_blocks_size() const;
  public:
  void clear_blocks();
  const std::string& blocks(int index) const;
  std::string* mutable_blocks(int index);
  void set_blocks(int index, const std::string& value);
  void set_blocks(int index, std::string&& value);
  void set_blocks(int index, const char* value);
  void set_blocks(int index, const void* value, size_t size);
  std::string* add_blocks();
  void add_blocks(const std::string& value);
  void add_blocks(std::string&& value);
  void add_blocks(const char* value);
  void add_blocks(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& blocks() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_blocks();
  private:
  const std::string& _internal_blocks(int index) const;
  std::string* _internal_add_blocks();
  public:

  // string msg_id = 1;
  void clear_msg_id();
  const std::string& msg_id() const;
  void set_msg_id(const std::string& value);
  void set_msg_id(std::string&& value);
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  std::string* mutable_msg_id();
  std::string* release_msg_id();
  void set_allocated_msg_id(std::string* msg_id);
  private:
  const std::string& _internal_msg_id() const;
  void _internal_set_msg_id(const std::string& value);
  std::string* _internal_mutable_msg_id();
  public:

  // @@protoc_insertion_point(class_scope:FastSyncGetBlockAck)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> blocks_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// -------------------------------------------------------------------

class SyncGetSumHashReq :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SyncGetSumHashReq) */ {
 public:
  SyncGetSumHashReq();
  virtual ~SyncGetSumHashReq();

  SyncGetSumHashReq(const SyncGetSumHashReq& from);
  SyncGetSumHashReq(SyncGetSumHashReq&& from) noexcept
    : SyncGetSumHashReq() {
    *this = ::std::move(from);
  }

  inline SyncGetSumHashReq& operator=(const SyncGetSumHashReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncGetSumHashReq& operator=(SyncGetSumHashReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SyncGetSumHashReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncGetSumHashReq* internal_default_instance() {
    return reinterpret_cast<const SyncGetSumHashReq*>(
               &_SyncGetSumHashReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SyncGetSumHashReq& a, SyncGetSumHashReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncGetSumHashReq* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncGetSumHashReq* New() const final {
    return CreateMaybeMessage<SyncGetSumHashReq>(nullptr);
  }

  SyncGetSumHashReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncGetSumHashReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SyncGetSumHashReq& from);
  void MergeFrom(const SyncGetSumHashReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncGetSumHashReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SyncGetSumHashReq";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSelfNodeIdFieldNumber = 1,
    kMsgIdFieldNumber = 2,
    kStartHeightFieldNumber = 3,
    kEndHeightFieldNumber = 4,
  };
  // string self_node_id = 1;
  void clear_self_node_id();
  const std::string& self_node_id() const;
  void set_self_node_id(const std::string& value);
  void set_self_node_id(std::string&& value);
  void set_self_node_id(const char* value);
  void set_self_node_id(const char* value, size_t size);
  std::string* mutable_self_node_id();
  std::string* release_self_node_id();
  void set_allocated_self_node_id(std::string* self_node_id);
  private:
  const std::string& _internal_self_node_id() const;
  void _internal_set_self_node_id(const std::string& value);
  std::string* _internal_mutable_self_node_id();
  public:

  // string msg_id = 2;
  void clear_msg_id();
  const std::string& msg_id() const;
  void set_msg_id(const std::string& value);
  void set_msg_id(std::string&& value);
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  std::string* mutable_msg_id();
  std::string* release_msg_id();
  void set_allocated_msg_id(std::string* msg_id);
  private:
  const std::string& _internal_msg_id() const;
  void _internal_set_msg_id(const std::string& value);
  std::string* _internal_mutable_msg_id();
  public:

  // uint64 start_height = 3;
  void clear_start_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 start_height() const;
  void set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_start_height() const;
  void _internal_set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 end_height = 4;
  void clear_end_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 end_height() const;
  void set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_end_height() const;
  void _internal_set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SyncGetSumHashReq)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr self_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 start_height_;
  ::PROTOBUF_NAMESPACE_ID::uint64 end_height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// -------------------------------------------------------------------

class SyncSumHash :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SyncSumHash) */ {
 public:
  SyncSumHash();
  virtual ~SyncSumHash();

  SyncSumHash(const SyncSumHash& from);
  SyncSumHash(SyncSumHash&& from) noexcept
    : SyncSumHash() {
    *this = ::std::move(from);
  }

  inline SyncSumHash& operator=(const SyncSumHash& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncSumHash& operator=(SyncSumHash&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SyncSumHash& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncSumHash* internal_default_instance() {
    return reinterpret_cast<const SyncSumHash*>(
               &_SyncSumHash_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SyncSumHash& a, SyncSumHash& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncSumHash* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncSumHash* New() const final {
    return CreateMaybeMessage<SyncSumHash>(nullptr);
  }

  SyncSumHash* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncSumHash>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SyncSumHash& from);
  void MergeFrom(const SyncSumHash& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncSumHash* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SyncSumHash";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHashFieldNumber = 3,
    kStartHeightFieldNumber = 1,
    kEndHeightFieldNumber = 2,
  };
  // string hash = 3;
  void clear_hash();
  const std::string& hash() const;
  void set_hash(const std::string& value);
  void set_hash(std::string&& value);
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  std::string* mutable_hash();
  std::string* release_hash();
  void set_allocated_hash(std::string* hash);
  private:
  const std::string& _internal_hash() const;
  void _internal_set_hash(const std::string& value);
  std::string* _internal_mutable_hash();
  public:

  // uint64 start_height = 1;
  void clear_start_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 start_height() const;
  void set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_start_height() const;
  void _internal_set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 end_height = 2;
  void clear_end_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 end_height() const;
  void set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_end_height() const;
  void _internal_set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SyncSumHash)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hash_;
  ::PROTOBUF_NAMESPACE_ID::uint64 start_height_;
  ::PROTOBUF_NAMESPACE_ID::uint64 end_height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// -------------------------------------------------------------------

class SyncGetSumHashAck :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SyncGetSumHashAck) */ {
 public:
  SyncGetSumHashAck();
  virtual ~SyncGetSumHashAck();

  SyncGetSumHashAck(const SyncGetSumHashAck& from);
  SyncGetSumHashAck(SyncGetSumHashAck&& from) noexcept
    : SyncGetSumHashAck() {
    *this = ::std::move(from);
  }

  inline SyncGetSumHashAck& operator=(const SyncGetSumHashAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncGetSumHashAck& operator=(SyncGetSumHashAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SyncGetSumHashAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncGetSumHashAck* internal_default_instance() {
    return reinterpret_cast<const SyncGetSumHashAck*>(
               &_SyncGetSumHashAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(SyncGetSumHashAck& a, SyncGetSumHashAck& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncGetSumHashAck* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncGetSumHashAck* New() const final {
    return CreateMaybeMessage<SyncGetSumHashAck>(nullptr);
  }

  SyncGetSumHashAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncGetSumHashAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SyncGetSumHashAck& from);
  void MergeFrom(const SyncGetSumHashAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncGetSumHashAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SyncGetSumHashAck";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSyncSumHashesFieldNumber = 4,
    kSelfNodeIdFieldNumber = 1,
    kMsgIdFieldNumber = 2,
    kNodeBlockHeightFieldNumber = 3,
  };
  // repeated .SyncSumHash sync_sum_hashes = 4;
  int sync_sum_hashes_size() const;
  private:
  int _internal_sync_sum_hashes_size() const;
  public:
  void clear_sync_sum_hashes();
  ::SyncSumHash* mutable_sync_sum_hashes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SyncSumHash >*
      mutable_sync_sum_hashes();
  private:
  const ::SyncSumHash& _internal_sync_sum_hashes(int index) const;
  ::SyncSumHash* _internal_add_sync_sum_hashes();
  public:
  const ::SyncSumHash& sync_sum_hashes(int index) const;
  ::SyncSumHash* add_sync_sum_hashes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SyncSumHash >&
      sync_sum_hashes() const;

  // string self_node_id = 1;
  void clear_self_node_id();
  const std::string& self_node_id() const;
  void set_self_node_id(const std::string& value);
  void set_self_node_id(std::string&& value);
  void set_self_node_id(const char* value);
  void set_self_node_id(const char* value, size_t size);
  std::string* mutable_self_node_id();
  std::string* release_self_node_id();
  void set_allocated_self_node_id(std::string* self_node_id);
  private:
  const std::string& _internal_self_node_id() const;
  void _internal_set_self_node_id(const std::string& value);
  std::string* _internal_mutable_self_node_id();
  public:

  // string msg_id = 2;
  void clear_msg_id();
  const std::string& msg_id() const;
  void set_msg_id(const std::string& value);
  void set_msg_id(std::string&& value);
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  std::string* mutable_msg_id();
  std::string* release_msg_id();
  void set_allocated_msg_id(std::string* msg_id);
  private:
  const std::string& _internal_msg_id() const;
  void _internal_set_msg_id(const std::string& value);
  std::string* _internal_mutable_msg_id();
  public:

  // uint64 node_block_height = 3;
  void clear_node_block_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 node_block_height() const;
  void set_node_block_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_node_block_height() const;
  void _internal_set_node_block_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SyncGetSumHashAck)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SyncSumHash > sync_sum_hashes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr self_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 node_block_height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// -------------------------------------------------------------------

class SyncGetHeightHashReq :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SyncGetHeightHashReq) */ {
 public:
  SyncGetHeightHashReq();
  virtual ~SyncGetHeightHashReq();

  SyncGetHeightHashReq(const SyncGetHeightHashReq& from);
  SyncGetHeightHashReq(SyncGetHeightHashReq&& from) noexcept
    : SyncGetHeightHashReq() {
    *this = ::std::move(from);
  }

  inline SyncGetHeightHashReq& operator=(const SyncGetHeightHashReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncGetHeightHashReq& operator=(SyncGetHeightHashReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SyncGetHeightHashReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncGetHeightHashReq* internal_default_instance() {
    return reinterpret_cast<const SyncGetHeightHashReq*>(
               &_SyncGetHeightHashReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(SyncGetHeightHashReq& a, SyncGetHeightHashReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncGetHeightHashReq* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncGetHeightHashReq* New() const final {
    return CreateMaybeMessage<SyncGetHeightHashReq>(nullptr);
  }

  SyncGetHeightHashReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncGetHeightHashReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SyncGetHeightHashReq& from);
  void MergeFrom(const SyncGetHeightHashReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncGetHeightHashReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SyncGetHeightHashReq";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSelfNodeIdFieldNumber = 1,
    kMsgIdFieldNumber = 2,
    kStartHeightFieldNumber = 3,
    kEndHeightFieldNumber = 4,
  };
  // string self_node_id = 1;
  void clear_self_node_id();
  const std::string& self_node_id() const;
  void set_self_node_id(const std::string& value);
  void set_self_node_id(std::string&& value);
  void set_self_node_id(const char* value);
  void set_self_node_id(const char* value, size_t size);
  std::string* mutable_self_node_id();
  std::string* release_self_node_id();
  void set_allocated_self_node_id(std::string* self_node_id);
  private:
  const std::string& _internal_self_node_id() const;
  void _internal_set_self_node_id(const std::string& value);
  std::string* _internal_mutable_self_node_id();
  public:

  // string msg_id = 2;
  void clear_msg_id();
  const std::string& msg_id() const;
  void set_msg_id(const std::string& value);
  void set_msg_id(std::string&& value);
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  std::string* mutable_msg_id();
  std::string* release_msg_id();
  void set_allocated_msg_id(std::string* msg_id);
  private:
  const std::string& _internal_msg_id() const;
  void _internal_set_msg_id(const std::string& value);
  std::string* _internal_mutable_msg_id();
  public:

  // uint64 start_height = 3;
  void clear_start_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 start_height() const;
  void set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_start_height() const;
  void _internal_set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 end_height = 4;
  void clear_end_height();
  ::PROTOBUF_NAMESPACE_ID::uint64 end_height() const;
  void set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_end_height() const;
  void _internal_set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SyncGetHeightHashReq)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr self_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 start_height_;
  ::PROTOBUF_NAMESPACE_ID::uint64 end_height_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// -------------------------------------------------------------------

class SyncGetHeightHashAck :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SyncGetHeightHashAck) */ {
 public:
  SyncGetHeightHashAck();
  virtual ~SyncGetHeightHashAck();

  SyncGetHeightHashAck(const SyncGetHeightHashAck& from);
  SyncGetHeightHashAck(SyncGetHeightHashAck&& from) noexcept
    : SyncGetHeightHashAck() {
    *this = ::std::move(from);
  }

  inline SyncGetHeightHashAck& operator=(const SyncGetHeightHashAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncGetHeightHashAck& operator=(SyncGetHeightHashAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SyncGetHeightHashAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncGetHeightHashAck* internal_default_instance() {
    return reinterpret_cast<const SyncGetHeightHashAck*>(
               &_SyncGetHeightHashAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SyncGetHeightHashAck& a, SyncGetHeightHashAck& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncGetHeightHashAck* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncGetHeightHashAck* New() const final {
    return CreateMaybeMessage<SyncGetHeightHashAck>(nullptr);
  }

  SyncGetHeightHashAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncGetHeightHashAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SyncGetHeightHashAck& from);
  void MergeFrom(const SyncGetHeightHashAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncGetHeightHashAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SyncGetHeightHashAck";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlockHashesFieldNumber = 3,
    kSelfNodeIdFieldNumber = 1,
    kMsgIdFieldNumber = 2,
  };
  // repeated string block_hashes = 3;
  int block_hashes_size() const;
  private:
  int _internal_block_hashes_size() const;
  public:
  void clear_block_hashes();
  const std::string& block_hashes(int index) const;
  std::string* mutable_block_hashes(int index);
  void set_block_hashes(int index, const std::string& value);
  void set_block_hashes(int index, std::string&& value);
  void set_block_hashes(int index, const char* value);
  void set_block_hashes(int index, const char* value, size_t size);
  std::string* add_block_hashes();
  void add_block_hashes(const std::string& value);
  void add_block_hashes(std::string&& value);
  void add_block_hashes(const char* value);
  void add_block_hashes(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& block_hashes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_block_hashes();
  private:
  const std::string& _internal_block_hashes(int index) const;
  std::string* _internal_add_block_hashes();
  public:

  // string self_node_id = 1;
  void clear_self_node_id();
  const std::string& self_node_id() const;
  void set_self_node_id(const std::string& value);
  void set_self_node_id(std::string&& value);
  void set_self_node_id(const char* value);
  void set_self_node_id(const char* value, size_t size);
  std::string* mutable_self_node_id();
  std::string* release_self_node_id();
  void set_allocated_self_node_id(std::string* self_node_id);
  private:
  const std::string& _internal_self_node_id() const;
  void _internal_set_self_node_id(const std::string& value);
  std::string* _internal_mutable_self_node_id();
  public:

  // string msg_id = 2;
  void clear_msg_id();
  const std::string& msg_id() const;
  void set_msg_id(const std::string& value);
  void set_msg_id(std::string&& value);
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  std::string* mutable_msg_id();
  std::string* release_msg_id();
  void set_allocated_msg_id(std::string* msg_id);
  private:
  const std::string& _internal_msg_id() const;
  void _internal_set_msg_id(const std::string& value);
  std::string* _internal_mutable_msg_id();
  public:

  // @@protoc_insertion_point(class_scope:SyncGetHeightHashAck)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> block_hashes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr self_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// -------------------------------------------------------------------

class SyncGetBlockReq :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SyncGetBlockReq) */ {
 public:
  SyncGetBlockReq();
  virtual ~SyncGetBlockReq();

  SyncGetBlockReq(const SyncGetBlockReq& from);
  SyncGetBlockReq(SyncGetBlockReq&& from) noexcept
    : SyncGetBlockReq() {
    *this = ::std::move(from);
  }

  inline SyncGetBlockReq& operator=(const SyncGetBlockReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncGetBlockReq& operator=(SyncGetBlockReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SyncGetBlockReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncGetBlockReq* internal_default_instance() {
    return reinterpret_cast<const SyncGetBlockReq*>(
               &_SyncGetBlockReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SyncGetBlockReq& a, SyncGetBlockReq& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncGetBlockReq* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncGetBlockReq* New() const final {
    return CreateMaybeMessage<SyncGetBlockReq>(nullptr);
  }

  SyncGetBlockReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncGetBlockReq>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SyncGetBlockReq& from);
  void MergeFrom(const SyncGetBlockReq& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncGetBlockReq* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SyncGetBlockReq";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlockHashesFieldNumber = 3,
    kSelfNodeIdFieldNumber = 1,
    kMsgIdFieldNumber = 2,
  };
  // repeated string block_hashes = 3;
  int block_hashes_size() const;
  private:
  int _internal_block_hashes_size() const;
  public:
  void clear_block_hashes();
  const std::string& block_hashes(int index) const;
  std::string* mutable_block_hashes(int index);
  void set_block_hashes(int index, const std::string& value);
  void set_block_hashes(int index, std::string&& value);
  void set_block_hashes(int index, const char* value);
  void set_block_hashes(int index, const char* value, size_t size);
  std::string* add_block_hashes();
  void add_block_hashes(const std::string& value);
  void add_block_hashes(std::string&& value);
  void add_block_hashes(const char* value);
  void add_block_hashes(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& block_hashes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_block_hashes();
  private:
  const std::string& _internal_block_hashes(int index) const;
  std::string* _internal_add_block_hashes();
  public:

  // string self_node_id = 1;
  void clear_self_node_id();
  const std::string& self_node_id() const;
  void set_self_node_id(const std::string& value);
  void set_self_node_id(std::string&& value);
  void set_self_node_id(const char* value);
  void set_self_node_id(const char* value, size_t size);
  std::string* mutable_self_node_id();
  std::string* release_self_node_id();
  void set_allocated_self_node_id(std::string* self_node_id);
  private:
  const std::string& _internal_self_node_id() const;
  void _internal_set_self_node_id(const std::string& value);
  std::string* _internal_mutable_self_node_id();
  public:

  // string msg_id = 2;
  void clear_msg_id();
  const std::string& msg_id() const;
  void set_msg_id(const std::string& value);
  void set_msg_id(std::string&& value);
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  std::string* mutable_msg_id();
  std::string* release_msg_id();
  void set_allocated_msg_id(std::string* msg_id);
  private:
  const std::string& _internal_msg_id() const;
  void _internal_set_msg_id(const std::string& value);
  std::string* _internal_mutable_msg_id();
  public:

  // @@protoc_insertion_point(class_scope:SyncGetBlockReq)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> block_hashes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr self_node_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// -------------------------------------------------------------------

class SyncGetBlockAck :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SyncGetBlockAck) */ {
 public:
  SyncGetBlockAck();
  virtual ~SyncGetBlockAck();

  SyncGetBlockAck(const SyncGetBlockAck& from);
  SyncGetBlockAck(SyncGetBlockAck&& from) noexcept
    : SyncGetBlockAck() {
    *this = ::std::move(from);
  }

  inline SyncGetBlockAck& operator=(const SyncGetBlockAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncGetBlockAck& operator=(SyncGetBlockAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SyncGetBlockAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncGetBlockAck* internal_default_instance() {
    return reinterpret_cast<const SyncGetBlockAck*>(
               &_SyncGetBlockAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SyncGetBlockAck& a, SyncGetBlockAck& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncGetBlockAck* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncGetBlockAck* New() const final {
    return CreateMaybeMessage<SyncGetBlockAck>(nullptr);
  }

  SyncGetBlockAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncGetBlockAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SyncGetBlockAck& from);
  void MergeFrom(const SyncGetBlockAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncGetBlockAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SyncGetBlockAck";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sync_5fblock_2eproto);
    return ::descriptor_table_sync_5fblock_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlocksFieldNumber = 2,
    kMsgIdFieldNumber = 1,
  };
  // repeated bytes blocks = 2;
  int blocks_size() const;
  private:
  int _internal_blocks_size() const;
  public:
  void clear_blocks();
  const std::string& blocks(int index) const;
  std::string* mutable_blocks(int index);
  void set_blocks(int index, const std::string& value);
  void set_blocks(int index, std::string&& value);
  void set_blocks(int index, const char* value);
  void set_blocks(int index, const void* value, size_t size);
  std::string* add_blocks();
  void add_blocks(const std::string& value);
  void add_blocks(std::string&& value);
  void add_blocks(const char* value);
  void add_blocks(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& blocks() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_blocks();
  private:
  const std::string& _internal_blocks(int index) const;
  std::string* _internal_add_blocks();
  public:

  // string msg_id = 1;
  void clear_msg_id();
  const std::string& msg_id() const;
  void set_msg_id(const std::string& value);
  void set_msg_id(std::string&& value);
  void set_msg_id(const char* value);
  void set_msg_id(const char* value, size_t size);
  std::string* mutable_msg_id();
  std::string* release_msg_id();
  void set_allocated_msg_id(std::string* msg_id);
  private:
  const std::string& _internal_msg_id() const;
  void _internal_set_msg_id(const std::string& value);
  std::string* _internal_mutable_msg_id();
  public:

  // @@protoc_insertion_point(class_scope:SyncGetBlockAck)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> blocks_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sync_5fblock_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FastSyncGetHashReq

// string self_node_id = 1;
inline void FastSyncGetHashReq::clear_self_node_id() {
  self_node_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FastSyncGetHashReq::self_node_id() const {
  // @@protoc_insertion_point(field_get:FastSyncGetHashReq.self_node_id)
  return _internal_self_node_id();
}
inline void FastSyncGetHashReq::set_self_node_id(const std::string& value) {
  _internal_set_self_node_id(value);
  // @@protoc_insertion_point(field_set:FastSyncGetHashReq.self_node_id)
}
inline std::string* FastSyncGetHashReq::mutable_self_node_id() {
  // @@protoc_insertion_point(field_mutable:FastSyncGetHashReq.self_node_id)
  return _internal_mutable_self_node_id();
}
inline const std::string& FastSyncGetHashReq::_internal_self_node_id() const {
  return self_node_id_.GetNoArena();
}
inline void FastSyncGetHashReq::_internal_set_self_node_id(const std::string& value) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FastSyncGetHashReq::set_self_node_id(std::string&& value) {
  
  self_node_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FastSyncGetHashReq.self_node_id)
}
inline void FastSyncGetHashReq::set_self_node_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FastSyncGetHashReq.self_node_id)
}
inline void FastSyncGetHashReq::set_self_node_id(const char* value, size_t size) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FastSyncGetHashReq.self_node_id)
}
inline std::string* FastSyncGetHashReq::_internal_mutable_self_node_id() {
  
  return self_node_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FastSyncGetHashReq::release_self_node_id() {
  // @@protoc_insertion_point(field_release:FastSyncGetHashReq.self_node_id)
  
  return self_node_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FastSyncGetHashReq::set_allocated_self_node_id(std::string* self_node_id) {
  if (self_node_id != nullptr) {
    
  } else {
    
  }
  self_node_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), self_node_id);
  // @@protoc_insertion_point(field_set_allocated:FastSyncGetHashReq.self_node_id)
}

// string msg_id = 2;
inline void FastSyncGetHashReq::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FastSyncGetHashReq::msg_id() const {
  // @@protoc_insertion_point(field_get:FastSyncGetHashReq.msg_id)
  return _internal_msg_id();
}
inline void FastSyncGetHashReq::set_msg_id(const std::string& value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:FastSyncGetHashReq.msg_id)
}
inline std::string* FastSyncGetHashReq::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:FastSyncGetHashReq.msg_id)
  return _internal_mutable_msg_id();
}
inline const std::string& FastSyncGetHashReq::_internal_msg_id() const {
  return msg_id_.GetNoArena();
}
inline void FastSyncGetHashReq::_internal_set_msg_id(const std::string& value) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FastSyncGetHashReq::set_msg_id(std::string&& value) {
  
  msg_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FastSyncGetHashReq.msg_id)
}
inline void FastSyncGetHashReq::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FastSyncGetHashReq.msg_id)
}
inline void FastSyncGetHashReq::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FastSyncGetHashReq.msg_id)
}
inline std::string* FastSyncGetHashReq::_internal_mutable_msg_id() {
  
  return msg_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FastSyncGetHashReq::release_msg_id() {
  // @@protoc_insertion_point(field_release:FastSyncGetHashReq.msg_id)
  
  return msg_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FastSyncGetHashReq::set_allocated_msg_id(std::string* msg_id) {
  if (msg_id != nullptr) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:FastSyncGetHashReq.msg_id)
}

// uint64 start_height = 3;
inline void FastSyncGetHashReq::clear_start_height() {
  start_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FastSyncGetHashReq::_internal_start_height() const {
  return start_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FastSyncGetHashReq::start_height() const {
  // @@protoc_insertion_point(field_get:FastSyncGetHashReq.start_height)
  return _internal_start_height();
}
inline void FastSyncGetHashReq::_internal_set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  start_height_ = value;
}
inline void FastSyncGetHashReq::set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_start_height(value);
  // @@protoc_insertion_point(field_set:FastSyncGetHashReq.start_height)
}

// uint64 end_height = 4;
inline void FastSyncGetHashReq::clear_end_height() {
  end_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FastSyncGetHashReq::_internal_end_height() const {
  return end_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FastSyncGetHashReq::end_height() const {
  // @@protoc_insertion_point(field_get:FastSyncGetHashReq.end_height)
  return _internal_end_height();
}
inline void FastSyncGetHashReq::_internal_set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  end_height_ = value;
}
inline void FastSyncGetHashReq::set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_end_height(value);
  // @@protoc_insertion_point(field_set:FastSyncGetHashReq.end_height)
}

// -------------------------------------------------------------------

// FastSyncGetHashAck

// string self_node_id = 1;
inline void FastSyncGetHashAck::clear_self_node_id() {
  self_node_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FastSyncGetHashAck::self_node_id() const {
  // @@protoc_insertion_point(field_get:FastSyncGetHashAck.self_node_id)
  return _internal_self_node_id();
}
inline void FastSyncGetHashAck::set_self_node_id(const std::string& value) {
  _internal_set_self_node_id(value);
  // @@protoc_insertion_point(field_set:FastSyncGetHashAck.self_node_id)
}
inline std::string* FastSyncGetHashAck::mutable_self_node_id() {
  // @@protoc_insertion_point(field_mutable:FastSyncGetHashAck.self_node_id)
  return _internal_mutable_self_node_id();
}
inline const std::string& FastSyncGetHashAck::_internal_self_node_id() const {
  return self_node_id_.GetNoArena();
}
inline void FastSyncGetHashAck::_internal_set_self_node_id(const std::string& value) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FastSyncGetHashAck::set_self_node_id(std::string&& value) {
  
  self_node_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FastSyncGetHashAck.self_node_id)
}
inline void FastSyncGetHashAck::set_self_node_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FastSyncGetHashAck.self_node_id)
}
inline void FastSyncGetHashAck::set_self_node_id(const char* value, size_t size) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FastSyncGetHashAck.self_node_id)
}
inline std::string* FastSyncGetHashAck::_internal_mutable_self_node_id() {
  
  return self_node_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FastSyncGetHashAck::release_self_node_id() {
  // @@protoc_insertion_point(field_release:FastSyncGetHashAck.self_node_id)
  
  return self_node_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FastSyncGetHashAck::set_allocated_self_node_id(std::string* self_node_id) {
  if (self_node_id != nullptr) {
    
  } else {
    
  }
  self_node_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), self_node_id);
  // @@protoc_insertion_point(field_set_allocated:FastSyncGetHashAck.self_node_id)
}

// string msg_id = 2;
inline void FastSyncGetHashAck::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FastSyncGetHashAck::msg_id() const {
  // @@protoc_insertion_point(field_get:FastSyncGetHashAck.msg_id)
  return _internal_msg_id();
}
inline void FastSyncGetHashAck::set_msg_id(const std::string& value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:FastSyncGetHashAck.msg_id)
}
inline std::string* FastSyncGetHashAck::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:FastSyncGetHashAck.msg_id)
  return _internal_mutable_msg_id();
}
inline const std::string& FastSyncGetHashAck::_internal_msg_id() const {
  return msg_id_.GetNoArena();
}
inline void FastSyncGetHashAck::_internal_set_msg_id(const std::string& value) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FastSyncGetHashAck::set_msg_id(std::string&& value) {
  
  msg_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FastSyncGetHashAck.msg_id)
}
inline void FastSyncGetHashAck::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FastSyncGetHashAck.msg_id)
}
inline void FastSyncGetHashAck::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FastSyncGetHashAck.msg_id)
}
inline std::string* FastSyncGetHashAck::_internal_mutable_msg_id() {
  
  return msg_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FastSyncGetHashAck::release_msg_id() {
  // @@protoc_insertion_point(field_release:FastSyncGetHashAck.msg_id)
  
  return msg_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FastSyncGetHashAck::set_allocated_msg_id(std::string* msg_id) {
  if (msg_id != nullptr) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:FastSyncGetHashAck.msg_id)
}

// uint64 node_block_height = 3;
inline void FastSyncGetHashAck::clear_node_block_height() {
  node_block_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FastSyncGetHashAck::_internal_node_block_height() const {
  return node_block_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FastSyncGetHashAck::node_block_height() const {
  // @@protoc_insertion_point(field_get:FastSyncGetHashAck.node_block_height)
  return _internal_node_block_height();
}
inline void FastSyncGetHashAck::_internal_set_node_block_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  node_block_height_ = value;
}
inline void FastSyncGetHashAck::set_node_block_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_node_block_height(value);
  // @@protoc_insertion_point(field_set:FastSyncGetHashAck.node_block_height)
}

// string hash = 4;
inline void FastSyncGetHashAck::clear_hash() {
  hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FastSyncGetHashAck::hash() const {
  // @@protoc_insertion_point(field_get:FastSyncGetHashAck.hash)
  return _internal_hash();
}
inline void FastSyncGetHashAck::set_hash(const std::string& value) {
  _internal_set_hash(value);
  // @@protoc_insertion_point(field_set:FastSyncGetHashAck.hash)
}
inline std::string* FastSyncGetHashAck::mutable_hash() {
  // @@protoc_insertion_point(field_mutable:FastSyncGetHashAck.hash)
  return _internal_mutable_hash();
}
inline const std::string& FastSyncGetHashAck::_internal_hash() const {
  return hash_.GetNoArena();
}
inline void FastSyncGetHashAck::_internal_set_hash(const std::string& value) {
  
  hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FastSyncGetHashAck::set_hash(std::string&& value) {
  
  hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FastSyncGetHashAck.hash)
}
inline void FastSyncGetHashAck::set_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FastSyncGetHashAck.hash)
}
inline void FastSyncGetHashAck::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FastSyncGetHashAck.hash)
}
inline std::string* FastSyncGetHashAck::_internal_mutable_hash() {
  
  return hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FastSyncGetHashAck::release_hash() {
  // @@protoc_insertion_point(field_release:FastSyncGetHashAck.hash)
  
  return hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FastSyncGetHashAck::set_allocated_hash(std::string* hash) {
  if (hash != nullptr) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:FastSyncGetHashAck.hash)
}

// -------------------------------------------------------------------

// FastSyncGetBlockReq

// string self_node_id = 1;
inline void FastSyncGetBlockReq::clear_self_node_id() {
  self_node_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FastSyncGetBlockReq::self_node_id() const {
  // @@protoc_insertion_point(field_get:FastSyncGetBlockReq.self_node_id)
  return _internal_self_node_id();
}
inline void FastSyncGetBlockReq::set_self_node_id(const std::string& value) {
  _internal_set_self_node_id(value);
  // @@protoc_insertion_point(field_set:FastSyncGetBlockReq.self_node_id)
}
inline std::string* FastSyncGetBlockReq::mutable_self_node_id() {
  // @@protoc_insertion_point(field_mutable:FastSyncGetBlockReq.self_node_id)
  return _internal_mutable_self_node_id();
}
inline const std::string& FastSyncGetBlockReq::_internal_self_node_id() const {
  return self_node_id_.GetNoArena();
}
inline void FastSyncGetBlockReq::_internal_set_self_node_id(const std::string& value) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FastSyncGetBlockReq::set_self_node_id(std::string&& value) {
  
  self_node_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FastSyncGetBlockReq.self_node_id)
}
inline void FastSyncGetBlockReq::set_self_node_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FastSyncGetBlockReq.self_node_id)
}
inline void FastSyncGetBlockReq::set_self_node_id(const char* value, size_t size) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FastSyncGetBlockReq.self_node_id)
}
inline std::string* FastSyncGetBlockReq::_internal_mutable_self_node_id() {
  
  return self_node_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FastSyncGetBlockReq::release_self_node_id() {
  // @@protoc_insertion_point(field_release:FastSyncGetBlockReq.self_node_id)
  
  return self_node_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FastSyncGetBlockReq::set_allocated_self_node_id(std::string* self_node_id) {
  if (self_node_id != nullptr) {
    
  } else {
    
  }
  self_node_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), self_node_id);
  // @@protoc_insertion_point(field_set_allocated:FastSyncGetBlockReq.self_node_id)
}

// string msg_id = 2;
inline void FastSyncGetBlockReq::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FastSyncGetBlockReq::msg_id() const {
  // @@protoc_insertion_point(field_get:FastSyncGetBlockReq.msg_id)
  return _internal_msg_id();
}
inline void FastSyncGetBlockReq::set_msg_id(const std::string& value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:FastSyncGetBlockReq.msg_id)
}
inline std::string* FastSyncGetBlockReq::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:FastSyncGetBlockReq.msg_id)
  return _internal_mutable_msg_id();
}
inline const std::string& FastSyncGetBlockReq::_internal_msg_id() const {
  return msg_id_.GetNoArena();
}
inline void FastSyncGetBlockReq::_internal_set_msg_id(const std::string& value) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FastSyncGetBlockReq::set_msg_id(std::string&& value) {
  
  msg_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FastSyncGetBlockReq.msg_id)
}
inline void FastSyncGetBlockReq::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FastSyncGetBlockReq.msg_id)
}
inline void FastSyncGetBlockReq::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FastSyncGetBlockReq.msg_id)
}
inline std::string* FastSyncGetBlockReq::_internal_mutable_msg_id() {
  
  return msg_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FastSyncGetBlockReq::release_msg_id() {
  // @@protoc_insertion_point(field_release:FastSyncGetBlockReq.msg_id)
  
  return msg_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FastSyncGetBlockReq::set_allocated_msg_id(std::string* msg_id) {
  if (msg_id != nullptr) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:FastSyncGetBlockReq.msg_id)
}

// uint64 start_height = 3;
inline void FastSyncGetBlockReq::clear_start_height() {
  start_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FastSyncGetBlockReq::_internal_start_height() const {
  return start_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FastSyncGetBlockReq::start_height() const {
  // @@protoc_insertion_point(field_get:FastSyncGetBlockReq.start_height)
  return _internal_start_height();
}
inline void FastSyncGetBlockReq::_internal_set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  start_height_ = value;
}
inline void FastSyncGetBlockReq::set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_start_height(value);
  // @@protoc_insertion_point(field_set:FastSyncGetBlockReq.start_height)
}

// uint64 end_height = 4;
inline void FastSyncGetBlockReq::clear_end_height() {
  end_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FastSyncGetBlockReq::_internal_end_height() const {
  return end_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 FastSyncGetBlockReq::end_height() const {
  // @@protoc_insertion_point(field_get:FastSyncGetBlockReq.end_height)
  return _internal_end_height();
}
inline void FastSyncGetBlockReq::_internal_set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  end_height_ = value;
}
inline void FastSyncGetBlockReq::set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_end_height(value);
  // @@protoc_insertion_point(field_set:FastSyncGetBlockReq.end_height)
}

// -------------------------------------------------------------------

// FastSyncGetBlockAck

// string msg_id = 1;
inline void FastSyncGetBlockAck::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FastSyncGetBlockAck::msg_id() const {
  // @@protoc_insertion_point(field_get:FastSyncGetBlockAck.msg_id)
  return _internal_msg_id();
}
inline void FastSyncGetBlockAck::set_msg_id(const std::string& value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:FastSyncGetBlockAck.msg_id)
}
inline std::string* FastSyncGetBlockAck::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:FastSyncGetBlockAck.msg_id)
  return _internal_mutable_msg_id();
}
inline const std::string& FastSyncGetBlockAck::_internal_msg_id() const {
  return msg_id_.GetNoArena();
}
inline void FastSyncGetBlockAck::_internal_set_msg_id(const std::string& value) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FastSyncGetBlockAck::set_msg_id(std::string&& value) {
  
  msg_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FastSyncGetBlockAck.msg_id)
}
inline void FastSyncGetBlockAck::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FastSyncGetBlockAck.msg_id)
}
inline void FastSyncGetBlockAck::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FastSyncGetBlockAck.msg_id)
}
inline std::string* FastSyncGetBlockAck::_internal_mutable_msg_id() {
  
  return msg_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FastSyncGetBlockAck::release_msg_id() {
  // @@protoc_insertion_point(field_release:FastSyncGetBlockAck.msg_id)
  
  return msg_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FastSyncGetBlockAck::set_allocated_msg_id(std::string* msg_id) {
  if (msg_id != nullptr) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:FastSyncGetBlockAck.msg_id)
}

// repeated bytes blocks = 2;
inline int FastSyncGetBlockAck::_internal_blocks_size() const {
  return blocks_.size();
}
inline int FastSyncGetBlockAck::blocks_size() const {
  return _internal_blocks_size();
}
inline void FastSyncGetBlockAck::clear_blocks() {
  blocks_.Clear();
}
inline std::string* FastSyncGetBlockAck::add_blocks() {
  // @@protoc_insertion_point(field_add_mutable:FastSyncGetBlockAck.blocks)
  return _internal_add_blocks();
}
inline const std::string& FastSyncGetBlockAck::_internal_blocks(int index) const {
  return blocks_.Get(index);
}
inline const std::string& FastSyncGetBlockAck::blocks(int index) const {
  // @@protoc_insertion_point(field_get:FastSyncGetBlockAck.blocks)
  return _internal_blocks(index);
}
inline std::string* FastSyncGetBlockAck::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:FastSyncGetBlockAck.blocks)
  return blocks_.Mutable(index);
}
inline void FastSyncGetBlockAck::set_blocks(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:FastSyncGetBlockAck.blocks)
  blocks_.Mutable(index)->assign(value);
}
inline void FastSyncGetBlockAck::set_blocks(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:FastSyncGetBlockAck.blocks)
  blocks_.Mutable(index)->assign(std::move(value));
}
inline void FastSyncGetBlockAck::set_blocks(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  blocks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:FastSyncGetBlockAck.blocks)
}
inline void FastSyncGetBlockAck::set_blocks(int index, const void* value, size_t size) {
  blocks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:FastSyncGetBlockAck.blocks)
}
inline std::string* FastSyncGetBlockAck::_internal_add_blocks() {
  return blocks_.Add();
}
inline void FastSyncGetBlockAck::add_blocks(const std::string& value) {
  blocks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:FastSyncGetBlockAck.blocks)
}
inline void FastSyncGetBlockAck::add_blocks(std::string&& value) {
  blocks_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:FastSyncGetBlockAck.blocks)
}
inline void FastSyncGetBlockAck::add_blocks(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  blocks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:FastSyncGetBlockAck.blocks)
}
inline void FastSyncGetBlockAck::add_blocks(const void* value, size_t size) {
  blocks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:FastSyncGetBlockAck.blocks)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
FastSyncGetBlockAck::blocks() const {
  // @@protoc_insertion_point(field_list:FastSyncGetBlockAck.blocks)
  return blocks_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
FastSyncGetBlockAck::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:FastSyncGetBlockAck.blocks)
  return &blocks_;
}

// -------------------------------------------------------------------

// SyncGetSumHashReq

// string self_node_id = 1;
inline void SyncGetSumHashReq::clear_self_node_id() {
  self_node_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetSumHashReq::self_node_id() const {
  // @@protoc_insertion_point(field_get:SyncGetSumHashReq.self_node_id)
  return _internal_self_node_id();
}
inline void SyncGetSumHashReq::set_self_node_id(const std::string& value) {
  _internal_set_self_node_id(value);
  // @@protoc_insertion_point(field_set:SyncGetSumHashReq.self_node_id)
}
inline std::string* SyncGetSumHashReq::mutable_self_node_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetSumHashReq.self_node_id)
  return _internal_mutable_self_node_id();
}
inline const std::string& SyncGetSumHashReq::_internal_self_node_id() const {
  return self_node_id_.GetNoArena();
}
inline void SyncGetSumHashReq::_internal_set_self_node_id(const std::string& value) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetSumHashReq::set_self_node_id(std::string&& value) {
  
  self_node_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetSumHashReq.self_node_id)
}
inline void SyncGetSumHashReq::set_self_node_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetSumHashReq.self_node_id)
}
inline void SyncGetSumHashReq::set_self_node_id(const char* value, size_t size) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetSumHashReq.self_node_id)
}
inline std::string* SyncGetSumHashReq::_internal_mutable_self_node_id() {
  
  return self_node_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetSumHashReq::release_self_node_id() {
  // @@protoc_insertion_point(field_release:SyncGetSumHashReq.self_node_id)
  
  return self_node_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetSumHashReq::set_allocated_self_node_id(std::string* self_node_id) {
  if (self_node_id != nullptr) {
    
  } else {
    
  }
  self_node_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), self_node_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetSumHashReq.self_node_id)
}

// string msg_id = 2;
inline void SyncGetSumHashReq::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetSumHashReq::msg_id() const {
  // @@protoc_insertion_point(field_get:SyncGetSumHashReq.msg_id)
  return _internal_msg_id();
}
inline void SyncGetSumHashReq::set_msg_id(const std::string& value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:SyncGetSumHashReq.msg_id)
}
inline std::string* SyncGetSumHashReq::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetSumHashReq.msg_id)
  return _internal_mutable_msg_id();
}
inline const std::string& SyncGetSumHashReq::_internal_msg_id() const {
  return msg_id_.GetNoArena();
}
inline void SyncGetSumHashReq::_internal_set_msg_id(const std::string& value) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetSumHashReq::set_msg_id(std::string&& value) {
  
  msg_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetSumHashReq.msg_id)
}
inline void SyncGetSumHashReq::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetSumHashReq.msg_id)
}
inline void SyncGetSumHashReq::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetSumHashReq.msg_id)
}
inline std::string* SyncGetSumHashReq::_internal_mutable_msg_id() {
  
  return msg_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetSumHashReq::release_msg_id() {
  // @@protoc_insertion_point(field_release:SyncGetSumHashReq.msg_id)
  
  return msg_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetSumHashReq::set_allocated_msg_id(std::string* msg_id) {
  if (msg_id != nullptr) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetSumHashReq.msg_id)
}

// uint64 start_height = 3;
inline void SyncGetSumHashReq::clear_start_height() {
  start_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncGetSumHashReq::_internal_start_height() const {
  return start_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncGetSumHashReq::start_height() const {
  // @@protoc_insertion_point(field_get:SyncGetSumHashReq.start_height)
  return _internal_start_height();
}
inline void SyncGetSumHashReq::_internal_set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  start_height_ = value;
}
inline void SyncGetSumHashReq::set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_start_height(value);
  // @@protoc_insertion_point(field_set:SyncGetSumHashReq.start_height)
}

// uint64 end_height = 4;
inline void SyncGetSumHashReq::clear_end_height() {
  end_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncGetSumHashReq::_internal_end_height() const {
  return end_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncGetSumHashReq::end_height() const {
  // @@protoc_insertion_point(field_get:SyncGetSumHashReq.end_height)
  return _internal_end_height();
}
inline void SyncGetSumHashReq::_internal_set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  end_height_ = value;
}
inline void SyncGetSumHashReq::set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_end_height(value);
  // @@protoc_insertion_point(field_set:SyncGetSumHashReq.end_height)
}

// -------------------------------------------------------------------

// SyncSumHash

// uint64 start_height = 1;
inline void SyncSumHash::clear_start_height() {
  start_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncSumHash::_internal_start_height() const {
  return start_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncSumHash::start_height() const {
  // @@protoc_insertion_point(field_get:SyncSumHash.start_height)
  return _internal_start_height();
}
inline void SyncSumHash::_internal_set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  start_height_ = value;
}
inline void SyncSumHash::set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_start_height(value);
  // @@protoc_insertion_point(field_set:SyncSumHash.start_height)
}

// uint64 end_height = 2;
inline void SyncSumHash::clear_end_height() {
  end_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncSumHash::_internal_end_height() const {
  return end_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncSumHash::end_height() const {
  // @@protoc_insertion_point(field_get:SyncSumHash.end_height)
  return _internal_end_height();
}
inline void SyncSumHash::_internal_set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  end_height_ = value;
}
inline void SyncSumHash::set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_end_height(value);
  // @@protoc_insertion_point(field_set:SyncSumHash.end_height)
}

// string hash = 3;
inline void SyncSumHash::clear_hash() {
  hash_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncSumHash::hash() const {
  // @@protoc_insertion_point(field_get:SyncSumHash.hash)
  return _internal_hash();
}
inline void SyncSumHash::set_hash(const std::string& value) {
  _internal_set_hash(value);
  // @@protoc_insertion_point(field_set:SyncSumHash.hash)
}
inline std::string* SyncSumHash::mutable_hash() {
  // @@protoc_insertion_point(field_mutable:SyncSumHash.hash)
  return _internal_mutable_hash();
}
inline const std::string& SyncSumHash::_internal_hash() const {
  return hash_.GetNoArena();
}
inline void SyncSumHash::_internal_set_hash(const std::string& value) {
  
  hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncSumHash::set_hash(std::string&& value) {
  
  hash_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncSumHash.hash)
}
inline void SyncSumHash::set_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncSumHash.hash)
}
inline void SyncSumHash::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncSumHash.hash)
}
inline std::string* SyncSumHash::_internal_mutable_hash() {
  
  return hash_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncSumHash::release_hash() {
  // @@protoc_insertion_point(field_release:SyncSumHash.hash)
  
  return hash_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncSumHash::set_allocated_hash(std::string* hash) {
  if (hash != nullptr) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:SyncSumHash.hash)
}

// -------------------------------------------------------------------

// SyncGetSumHashAck

// string self_node_id = 1;
inline void SyncGetSumHashAck::clear_self_node_id() {
  self_node_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetSumHashAck::self_node_id() const {
  // @@protoc_insertion_point(field_get:SyncGetSumHashAck.self_node_id)
  return _internal_self_node_id();
}
inline void SyncGetSumHashAck::set_self_node_id(const std::string& value) {
  _internal_set_self_node_id(value);
  // @@protoc_insertion_point(field_set:SyncGetSumHashAck.self_node_id)
}
inline std::string* SyncGetSumHashAck::mutable_self_node_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetSumHashAck.self_node_id)
  return _internal_mutable_self_node_id();
}
inline const std::string& SyncGetSumHashAck::_internal_self_node_id() const {
  return self_node_id_.GetNoArena();
}
inline void SyncGetSumHashAck::_internal_set_self_node_id(const std::string& value) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetSumHashAck::set_self_node_id(std::string&& value) {
  
  self_node_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetSumHashAck.self_node_id)
}
inline void SyncGetSumHashAck::set_self_node_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetSumHashAck.self_node_id)
}
inline void SyncGetSumHashAck::set_self_node_id(const char* value, size_t size) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetSumHashAck.self_node_id)
}
inline std::string* SyncGetSumHashAck::_internal_mutable_self_node_id() {
  
  return self_node_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetSumHashAck::release_self_node_id() {
  // @@protoc_insertion_point(field_release:SyncGetSumHashAck.self_node_id)
  
  return self_node_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetSumHashAck::set_allocated_self_node_id(std::string* self_node_id) {
  if (self_node_id != nullptr) {
    
  } else {
    
  }
  self_node_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), self_node_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetSumHashAck.self_node_id)
}

// string msg_id = 2;
inline void SyncGetSumHashAck::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetSumHashAck::msg_id() const {
  // @@protoc_insertion_point(field_get:SyncGetSumHashAck.msg_id)
  return _internal_msg_id();
}
inline void SyncGetSumHashAck::set_msg_id(const std::string& value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:SyncGetSumHashAck.msg_id)
}
inline std::string* SyncGetSumHashAck::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetSumHashAck.msg_id)
  return _internal_mutable_msg_id();
}
inline const std::string& SyncGetSumHashAck::_internal_msg_id() const {
  return msg_id_.GetNoArena();
}
inline void SyncGetSumHashAck::_internal_set_msg_id(const std::string& value) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetSumHashAck::set_msg_id(std::string&& value) {
  
  msg_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetSumHashAck.msg_id)
}
inline void SyncGetSumHashAck::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetSumHashAck.msg_id)
}
inline void SyncGetSumHashAck::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetSumHashAck.msg_id)
}
inline std::string* SyncGetSumHashAck::_internal_mutable_msg_id() {
  
  return msg_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetSumHashAck::release_msg_id() {
  // @@protoc_insertion_point(field_release:SyncGetSumHashAck.msg_id)
  
  return msg_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetSumHashAck::set_allocated_msg_id(std::string* msg_id) {
  if (msg_id != nullptr) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetSumHashAck.msg_id)
}

// uint64 node_block_height = 3;
inline void SyncGetSumHashAck::clear_node_block_height() {
  node_block_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncGetSumHashAck::_internal_node_block_height() const {
  return node_block_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncGetSumHashAck::node_block_height() const {
  // @@protoc_insertion_point(field_get:SyncGetSumHashAck.node_block_height)
  return _internal_node_block_height();
}
inline void SyncGetSumHashAck::_internal_set_node_block_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  node_block_height_ = value;
}
inline void SyncGetSumHashAck::set_node_block_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_node_block_height(value);
  // @@protoc_insertion_point(field_set:SyncGetSumHashAck.node_block_height)
}

// repeated .SyncSumHash sync_sum_hashes = 4;
inline int SyncGetSumHashAck::_internal_sync_sum_hashes_size() const {
  return sync_sum_hashes_.size();
}
inline int SyncGetSumHashAck::sync_sum_hashes_size() const {
  return _internal_sync_sum_hashes_size();
}
inline void SyncGetSumHashAck::clear_sync_sum_hashes() {
  sync_sum_hashes_.Clear();
}
inline ::SyncSumHash* SyncGetSumHashAck::mutable_sync_sum_hashes(int index) {
  // @@protoc_insertion_point(field_mutable:SyncGetSumHashAck.sync_sum_hashes)
  return sync_sum_hashes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SyncSumHash >*
SyncGetSumHashAck::mutable_sync_sum_hashes() {
  // @@protoc_insertion_point(field_mutable_list:SyncGetSumHashAck.sync_sum_hashes)
  return &sync_sum_hashes_;
}
inline const ::SyncSumHash& SyncGetSumHashAck::_internal_sync_sum_hashes(int index) const {
  return sync_sum_hashes_.Get(index);
}
inline const ::SyncSumHash& SyncGetSumHashAck::sync_sum_hashes(int index) const {
  // @@protoc_insertion_point(field_get:SyncGetSumHashAck.sync_sum_hashes)
  return _internal_sync_sum_hashes(index);
}
inline ::SyncSumHash* SyncGetSumHashAck::_internal_add_sync_sum_hashes() {
  return sync_sum_hashes_.Add();
}
inline ::SyncSumHash* SyncGetSumHashAck::add_sync_sum_hashes() {
  // @@protoc_insertion_point(field_add:SyncGetSumHashAck.sync_sum_hashes)
  return _internal_add_sync_sum_hashes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::SyncSumHash >&
SyncGetSumHashAck::sync_sum_hashes() const {
  // @@protoc_insertion_point(field_list:SyncGetSumHashAck.sync_sum_hashes)
  return sync_sum_hashes_;
}

// -------------------------------------------------------------------

// SyncGetHeightHashReq

// string self_node_id = 1;
inline void SyncGetHeightHashReq::clear_self_node_id() {
  self_node_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetHeightHashReq::self_node_id() const {
  // @@protoc_insertion_point(field_get:SyncGetHeightHashReq.self_node_id)
  return _internal_self_node_id();
}
inline void SyncGetHeightHashReq::set_self_node_id(const std::string& value) {
  _internal_set_self_node_id(value);
  // @@protoc_insertion_point(field_set:SyncGetHeightHashReq.self_node_id)
}
inline std::string* SyncGetHeightHashReq::mutable_self_node_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetHeightHashReq.self_node_id)
  return _internal_mutable_self_node_id();
}
inline const std::string& SyncGetHeightHashReq::_internal_self_node_id() const {
  return self_node_id_.GetNoArena();
}
inline void SyncGetHeightHashReq::_internal_set_self_node_id(const std::string& value) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetHeightHashReq::set_self_node_id(std::string&& value) {
  
  self_node_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetHeightHashReq.self_node_id)
}
inline void SyncGetHeightHashReq::set_self_node_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetHeightHashReq.self_node_id)
}
inline void SyncGetHeightHashReq::set_self_node_id(const char* value, size_t size) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetHeightHashReq.self_node_id)
}
inline std::string* SyncGetHeightHashReq::_internal_mutable_self_node_id() {
  
  return self_node_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetHeightHashReq::release_self_node_id() {
  // @@protoc_insertion_point(field_release:SyncGetHeightHashReq.self_node_id)
  
  return self_node_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetHeightHashReq::set_allocated_self_node_id(std::string* self_node_id) {
  if (self_node_id != nullptr) {
    
  } else {
    
  }
  self_node_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), self_node_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetHeightHashReq.self_node_id)
}

// string msg_id = 2;
inline void SyncGetHeightHashReq::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetHeightHashReq::msg_id() const {
  // @@protoc_insertion_point(field_get:SyncGetHeightHashReq.msg_id)
  return _internal_msg_id();
}
inline void SyncGetHeightHashReq::set_msg_id(const std::string& value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:SyncGetHeightHashReq.msg_id)
}
inline std::string* SyncGetHeightHashReq::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetHeightHashReq.msg_id)
  return _internal_mutable_msg_id();
}
inline const std::string& SyncGetHeightHashReq::_internal_msg_id() const {
  return msg_id_.GetNoArena();
}
inline void SyncGetHeightHashReq::_internal_set_msg_id(const std::string& value) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetHeightHashReq::set_msg_id(std::string&& value) {
  
  msg_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetHeightHashReq.msg_id)
}
inline void SyncGetHeightHashReq::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetHeightHashReq.msg_id)
}
inline void SyncGetHeightHashReq::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetHeightHashReq.msg_id)
}
inline std::string* SyncGetHeightHashReq::_internal_mutable_msg_id() {
  
  return msg_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetHeightHashReq::release_msg_id() {
  // @@protoc_insertion_point(field_release:SyncGetHeightHashReq.msg_id)
  
  return msg_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetHeightHashReq::set_allocated_msg_id(std::string* msg_id) {
  if (msg_id != nullptr) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetHeightHashReq.msg_id)
}

// uint64 start_height = 3;
inline void SyncGetHeightHashReq::clear_start_height() {
  start_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncGetHeightHashReq::_internal_start_height() const {
  return start_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncGetHeightHashReq::start_height() const {
  // @@protoc_insertion_point(field_get:SyncGetHeightHashReq.start_height)
  return _internal_start_height();
}
inline void SyncGetHeightHashReq::_internal_set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  start_height_ = value;
}
inline void SyncGetHeightHashReq::set_start_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_start_height(value);
  // @@protoc_insertion_point(field_set:SyncGetHeightHashReq.start_height)
}

// uint64 end_height = 4;
inline void SyncGetHeightHashReq::clear_end_height() {
  end_height_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncGetHeightHashReq::_internal_end_height() const {
  return end_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncGetHeightHashReq::end_height() const {
  // @@protoc_insertion_point(field_get:SyncGetHeightHashReq.end_height)
  return _internal_end_height();
}
inline void SyncGetHeightHashReq::_internal_set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  end_height_ = value;
}
inline void SyncGetHeightHashReq::set_end_height(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_end_height(value);
  // @@protoc_insertion_point(field_set:SyncGetHeightHashReq.end_height)
}

// -------------------------------------------------------------------

// SyncGetHeightHashAck

// string self_node_id = 1;
inline void SyncGetHeightHashAck::clear_self_node_id() {
  self_node_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetHeightHashAck::self_node_id() const {
  // @@protoc_insertion_point(field_get:SyncGetHeightHashAck.self_node_id)
  return _internal_self_node_id();
}
inline void SyncGetHeightHashAck::set_self_node_id(const std::string& value) {
  _internal_set_self_node_id(value);
  // @@protoc_insertion_point(field_set:SyncGetHeightHashAck.self_node_id)
}
inline std::string* SyncGetHeightHashAck::mutable_self_node_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetHeightHashAck.self_node_id)
  return _internal_mutable_self_node_id();
}
inline const std::string& SyncGetHeightHashAck::_internal_self_node_id() const {
  return self_node_id_.GetNoArena();
}
inline void SyncGetHeightHashAck::_internal_set_self_node_id(const std::string& value) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetHeightHashAck::set_self_node_id(std::string&& value) {
  
  self_node_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetHeightHashAck.self_node_id)
}
inline void SyncGetHeightHashAck::set_self_node_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetHeightHashAck.self_node_id)
}
inline void SyncGetHeightHashAck::set_self_node_id(const char* value, size_t size) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetHeightHashAck.self_node_id)
}
inline std::string* SyncGetHeightHashAck::_internal_mutable_self_node_id() {
  
  return self_node_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetHeightHashAck::release_self_node_id() {
  // @@protoc_insertion_point(field_release:SyncGetHeightHashAck.self_node_id)
  
  return self_node_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetHeightHashAck::set_allocated_self_node_id(std::string* self_node_id) {
  if (self_node_id != nullptr) {
    
  } else {
    
  }
  self_node_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), self_node_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetHeightHashAck.self_node_id)
}

// string msg_id = 2;
inline void SyncGetHeightHashAck::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetHeightHashAck::msg_id() const {
  // @@protoc_insertion_point(field_get:SyncGetHeightHashAck.msg_id)
  return _internal_msg_id();
}
inline void SyncGetHeightHashAck::set_msg_id(const std::string& value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:SyncGetHeightHashAck.msg_id)
}
inline std::string* SyncGetHeightHashAck::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetHeightHashAck.msg_id)
  return _internal_mutable_msg_id();
}
inline const std::string& SyncGetHeightHashAck::_internal_msg_id() const {
  return msg_id_.GetNoArena();
}
inline void SyncGetHeightHashAck::_internal_set_msg_id(const std::string& value) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetHeightHashAck::set_msg_id(std::string&& value) {
  
  msg_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetHeightHashAck.msg_id)
}
inline void SyncGetHeightHashAck::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetHeightHashAck.msg_id)
}
inline void SyncGetHeightHashAck::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetHeightHashAck.msg_id)
}
inline std::string* SyncGetHeightHashAck::_internal_mutable_msg_id() {
  
  return msg_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetHeightHashAck::release_msg_id() {
  // @@protoc_insertion_point(field_release:SyncGetHeightHashAck.msg_id)
  
  return msg_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetHeightHashAck::set_allocated_msg_id(std::string* msg_id) {
  if (msg_id != nullptr) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetHeightHashAck.msg_id)
}

// repeated string block_hashes = 3;
inline int SyncGetHeightHashAck::_internal_block_hashes_size() const {
  return block_hashes_.size();
}
inline int SyncGetHeightHashAck::block_hashes_size() const {
  return _internal_block_hashes_size();
}
inline void SyncGetHeightHashAck::clear_block_hashes() {
  block_hashes_.Clear();
}
inline std::string* SyncGetHeightHashAck::add_block_hashes() {
  // @@protoc_insertion_point(field_add_mutable:SyncGetHeightHashAck.block_hashes)
  return _internal_add_block_hashes();
}
inline const std::string& SyncGetHeightHashAck::_internal_block_hashes(int index) const {
  return block_hashes_.Get(index);
}
inline const std::string& SyncGetHeightHashAck::block_hashes(int index) const {
  // @@protoc_insertion_point(field_get:SyncGetHeightHashAck.block_hashes)
  return _internal_block_hashes(index);
}
inline std::string* SyncGetHeightHashAck::mutable_block_hashes(int index) {
  // @@protoc_insertion_point(field_mutable:SyncGetHeightHashAck.block_hashes)
  return block_hashes_.Mutable(index);
}
inline void SyncGetHeightHashAck::set_block_hashes(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:SyncGetHeightHashAck.block_hashes)
  block_hashes_.Mutable(index)->assign(value);
}
inline void SyncGetHeightHashAck::set_block_hashes(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:SyncGetHeightHashAck.block_hashes)
  block_hashes_.Mutable(index)->assign(std::move(value));
}
inline void SyncGetHeightHashAck::set_block_hashes(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  block_hashes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SyncGetHeightHashAck.block_hashes)
}
inline void SyncGetHeightHashAck::set_block_hashes(int index, const char* value, size_t size) {
  block_hashes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SyncGetHeightHashAck.block_hashes)
}
inline std::string* SyncGetHeightHashAck::_internal_add_block_hashes() {
  return block_hashes_.Add();
}
inline void SyncGetHeightHashAck::add_block_hashes(const std::string& value) {
  block_hashes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SyncGetHeightHashAck.block_hashes)
}
inline void SyncGetHeightHashAck::add_block_hashes(std::string&& value) {
  block_hashes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:SyncGetHeightHashAck.block_hashes)
}
inline void SyncGetHeightHashAck::add_block_hashes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  block_hashes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SyncGetHeightHashAck.block_hashes)
}
inline void SyncGetHeightHashAck::add_block_hashes(const char* value, size_t size) {
  block_hashes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SyncGetHeightHashAck.block_hashes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
SyncGetHeightHashAck::block_hashes() const {
  // @@protoc_insertion_point(field_list:SyncGetHeightHashAck.block_hashes)
  return block_hashes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
SyncGetHeightHashAck::mutable_block_hashes() {
  // @@protoc_insertion_point(field_mutable_list:SyncGetHeightHashAck.block_hashes)
  return &block_hashes_;
}

// -------------------------------------------------------------------

// SyncGetBlockReq

// string self_node_id = 1;
inline void SyncGetBlockReq::clear_self_node_id() {
  self_node_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetBlockReq::self_node_id() const {
  // @@protoc_insertion_point(field_get:SyncGetBlockReq.self_node_id)
  return _internal_self_node_id();
}
inline void SyncGetBlockReq::set_self_node_id(const std::string& value) {
  _internal_set_self_node_id(value);
  // @@protoc_insertion_point(field_set:SyncGetBlockReq.self_node_id)
}
inline std::string* SyncGetBlockReq::mutable_self_node_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetBlockReq.self_node_id)
  return _internal_mutable_self_node_id();
}
inline const std::string& SyncGetBlockReq::_internal_self_node_id() const {
  return self_node_id_.GetNoArena();
}
inline void SyncGetBlockReq::_internal_set_self_node_id(const std::string& value) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetBlockReq::set_self_node_id(std::string&& value) {
  
  self_node_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetBlockReq.self_node_id)
}
inline void SyncGetBlockReq::set_self_node_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetBlockReq.self_node_id)
}
inline void SyncGetBlockReq::set_self_node_id(const char* value, size_t size) {
  
  self_node_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetBlockReq.self_node_id)
}
inline std::string* SyncGetBlockReq::_internal_mutable_self_node_id() {
  
  return self_node_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetBlockReq::release_self_node_id() {
  // @@protoc_insertion_point(field_release:SyncGetBlockReq.self_node_id)
  
  return self_node_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetBlockReq::set_allocated_self_node_id(std::string* self_node_id) {
  if (self_node_id != nullptr) {
    
  } else {
    
  }
  self_node_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), self_node_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetBlockReq.self_node_id)
}

// string msg_id = 2;
inline void SyncGetBlockReq::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetBlockReq::msg_id() const {
  // @@protoc_insertion_point(field_get:SyncGetBlockReq.msg_id)
  return _internal_msg_id();
}
inline void SyncGetBlockReq::set_msg_id(const std::string& value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:SyncGetBlockReq.msg_id)
}
inline std::string* SyncGetBlockReq::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetBlockReq.msg_id)
  return _internal_mutable_msg_id();
}
inline const std::string& SyncGetBlockReq::_internal_msg_id() const {
  return msg_id_.GetNoArena();
}
inline void SyncGetBlockReq::_internal_set_msg_id(const std::string& value) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetBlockReq::set_msg_id(std::string&& value) {
  
  msg_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetBlockReq.msg_id)
}
inline void SyncGetBlockReq::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetBlockReq.msg_id)
}
inline void SyncGetBlockReq::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetBlockReq.msg_id)
}
inline std::string* SyncGetBlockReq::_internal_mutable_msg_id() {
  
  return msg_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetBlockReq::release_msg_id() {
  // @@protoc_insertion_point(field_release:SyncGetBlockReq.msg_id)
  
  return msg_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetBlockReq::set_allocated_msg_id(std::string* msg_id) {
  if (msg_id != nullptr) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetBlockReq.msg_id)
}

// repeated string block_hashes = 3;
inline int SyncGetBlockReq::_internal_block_hashes_size() const {
  return block_hashes_.size();
}
inline int SyncGetBlockReq::block_hashes_size() const {
  return _internal_block_hashes_size();
}
inline void SyncGetBlockReq::clear_block_hashes() {
  block_hashes_.Clear();
}
inline std::string* SyncGetBlockReq::add_block_hashes() {
  // @@protoc_insertion_point(field_add_mutable:SyncGetBlockReq.block_hashes)
  return _internal_add_block_hashes();
}
inline const std::string& SyncGetBlockReq::_internal_block_hashes(int index) const {
  return block_hashes_.Get(index);
}
inline const std::string& SyncGetBlockReq::block_hashes(int index) const {
  // @@protoc_insertion_point(field_get:SyncGetBlockReq.block_hashes)
  return _internal_block_hashes(index);
}
inline std::string* SyncGetBlockReq::mutable_block_hashes(int index) {
  // @@protoc_insertion_point(field_mutable:SyncGetBlockReq.block_hashes)
  return block_hashes_.Mutable(index);
}
inline void SyncGetBlockReq::set_block_hashes(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:SyncGetBlockReq.block_hashes)
  block_hashes_.Mutable(index)->assign(value);
}
inline void SyncGetBlockReq::set_block_hashes(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:SyncGetBlockReq.block_hashes)
  block_hashes_.Mutable(index)->assign(std::move(value));
}
inline void SyncGetBlockReq::set_block_hashes(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  block_hashes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SyncGetBlockReq.block_hashes)
}
inline void SyncGetBlockReq::set_block_hashes(int index, const char* value, size_t size) {
  block_hashes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SyncGetBlockReq.block_hashes)
}
inline std::string* SyncGetBlockReq::_internal_add_block_hashes() {
  return block_hashes_.Add();
}
inline void SyncGetBlockReq::add_block_hashes(const std::string& value) {
  block_hashes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SyncGetBlockReq.block_hashes)
}
inline void SyncGetBlockReq::add_block_hashes(std::string&& value) {
  block_hashes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:SyncGetBlockReq.block_hashes)
}
inline void SyncGetBlockReq::add_block_hashes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  block_hashes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SyncGetBlockReq.block_hashes)
}
inline void SyncGetBlockReq::add_block_hashes(const char* value, size_t size) {
  block_hashes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SyncGetBlockReq.block_hashes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
SyncGetBlockReq::block_hashes() const {
  // @@protoc_insertion_point(field_list:SyncGetBlockReq.block_hashes)
  return block_hashes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
SyncGetBlockReq::mutable_block_hashes() {
  // @@protoc_insertion_point(field_mutable_list:SyncGetBlockReq.block_hashes)
  return &block_hashes_;
}

// -------------------------------------------------------------------

// SyncGetBlockAck

// string msg_id = 1;
inline void SyncGetBlockAck::clear_msg_id() {
  msg_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SyncGetBlockAck::msg_id() const {
  // @@protoc_insertion_point(field_get:SyncGetBlockAck.msg_id)
  return _internal_msg_id();
}
inline void SyncGetBlockAck::set_msg_id(const std::string& value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:SyncGetBlockAck.msg_id)
}
inline std::string* SyncGetBlockAck::mutable_msg_id() {
  // @@protoc_insertion_point(field_mutable:SyncGetBlockAck.msg_id)
  return _internal_mutable_msg_id();
}
inline const std::string& SyncGetBlockAck::_internal_msg_id() const {
  return msg_id_.GetNoArena();
}
inline void SyncGetBlockAck::_internal_set_msg_id(const std::string& value) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SyncGetBlockAck::set_msg_id(std::string&& value) {
  
  msg_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SyncGetBlockAck.msg_id)
}
inline void SyncGetBlockAck::set_msg_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SyncGetBlockAck.msg_id)
}
inline void SyncGetBlockAck::set_msg_id(const char* value, size_t size) {
  
  msg_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SyncGetBlockAck.msg_id)
}
inline std::string* SyncGetBlockAck::_internal_mutable_msg_id() {
  
  return msg_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SyncGetBlockAck::release_msg_id() {
  // @@protoc_insertion_point(field_release:SyncGetBlockAck.msg_id)
  
  return msg_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SyncGetBlockAck::set_allocated_msg_id(std::string* msg_id) {
  if (msg_id != nullptr) {
    
  } else {
    
  }
  msg_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_id);
  // @@protoc_insertion_point(field_set_allocated:SyncGetBlockAck.msg_id)
}

// repeated bytes blocks = 2;
inline int SyncGetBlockAck::_internal_blocks_size() const {
  return blocks_.size();
}
inline int SyncGetBlockAck::blocks_size() const {
  return _internal_blocks_size();
}
inline void SyncGetBlockAck::clear_blocks() {
  blocks_.Clear();
}
inline std::string* SyncGetBlockAck::add_blocks() {
  // @@protoc_insertion_point(field_add_mutable:SyncGetBlockAck.blocks)
  return _internal_add_blocks();
}
inline const std::string& SyncGetBlockAck::_internal_blocks(int index) const {
  return blocks_.Get(index);
}
inline const std::string& SyncGetBlockAck::blocks(int index) const {
  // @@protoc_insertion_point(field_get:SyncGetBlockAck.blocks)
  return _internal_blocks(index);
}
inline std::string* SyncGetBlockAck::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:SyncGetBlockAck.blocks)
  return blocks_.Mutable(index);
}
inline void SyncGetBlockAck::set_blocks(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:SyncGetBlockAck.blocks)
  blocks_.Mutable(index)->assign(value);
}
inline void SyncGetBlockAck::set_blocks(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:SyncGetBlockAck.blocks)
  blocks_.Mutable(index)->assign(std::move(value));
}
inline void SyncGetBlockAck::set_blocks(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  blocks_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:SyncGetBlockAck.blocks)
}
inline void SyncGetBlockAck::set_blocks(int index, const void* value, size_t size) {
  blocks_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SyncGetBlockAck.blocks)
}
inline std::string* SyncGetBlockAck::_internal_add_blocks() {
  return blocks_.Add();
}
inline void SyncGetBlockAck::add_blocks(const std::string& value) {
  blocks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:SyncGetBlockAck.blocks)
}
inline void SyncGetBlockAck::add_blocks(std::string&& value) {
  blocks_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:SyncGetBlockAck.blocks)
}
inline void SyncGetBlockAck::add_blocks(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  blocks_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:SyncGetBlockAck.blocks)
}
inline void SyncGetBlockAck::add_blocks(const void* value, size_t size) {
  blocks_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:SyncGetBlockAck.blocks)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
SyncGetBlockAck::blocks() const {
  // @@protoc_insertion_point(field_list:SyncGetBlockAck.blocks)
  return blocks_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
SyncGetBlockAck::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:SyncGetBlockAck.blocks)
  return &blocks_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_sync_5fblock_2eproto
